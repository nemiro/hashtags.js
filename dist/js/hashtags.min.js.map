{"version":3,"sources":["hashtags.utils.js","hashtags.tag.js","hashtags.js"],"names":[],"mappings":"AAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,OAAA,CAAA;EACA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;;EAEA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,SAAA,CAAA,EAAA;EACA;;EAEA,CAAA,CAAA;GACA;GACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA;GACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA;GACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;GACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;GACA,CAAA;SACA,UAAA,mBAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,eAAA,GAAA,QAAA,OAAA,EAAA;UACA,QAAA,CAAA,UAAA,MAAA,EAAA,CAAA,EAAA,CAAA,CAAA;IACA,CAAA,CAAA,CAAA,CAAA,EAAA,OAAA,CAAA,CAAA,EAAA,CAAA,EAAA;MACA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,SAAA,GAAA,QAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA;MACA,CAAA,EAAA,CAAA,CAAA,OAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA;SACA,IAAA,WAAA;IACA;IACA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA;EACA,CAAA;;EAEA,CAAA,CAAA;GACA;GACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA;GACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA;GACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;GACA,CAAA;SACA,UAAA,UAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,WAAA,GAAA,QAAA,EAAA;IACA,CAAA,EAAA,CAAA,IAAA,CAAA,EAAA,GAAA,UAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA;IACA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,EAAA,IAAA,WAAA,EAAA,EAAA,CAAA,CAAA,QAAA,CAAA,EAAA,EAAA,SAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA;EACA,CAAA;;EAEA,CAAA,CAAA;GACA;GACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA;GACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA;GACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;GACA,CAAA;SACA,UAAA,UAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,WAAA,GAAA,QAAA,EAAA;MACA,WAAA,CAAA,EAAA,EAAA,EAAA,QAAA;EACA,CAAA;;EAEA,CAAA,CAAA;GACA;GACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA;GACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA;GACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;GACA,CAAA;SACA,UAAA,aAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,WAAA,GAAA,QAAA,EAAA;MACA,WAAA,IAAA,UAAA,QAAA,CAAA,CAAA,CAAA,QAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,SAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;EACA,CAAA;;EAEA,CAAA,CAAA;GACA,EAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;GACA,EAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;GACA;GACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;GACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA;GACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA;GACA,CAAA;SACA,UAAA,UAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,aeAAA,EAAA,EAAA;MACA,CAAA,CAAA,MAAA,IAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,WAAA,CAAA;MACA,CAAA,EAAA,KAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA;SACA,gBAAA,CAAA,CAAA;SACA,eAAA,CAAA,CAAA;MACA;MACA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,IAAA,CAAA;IACA;;IAEA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,ecACA,MAAA,aAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA;cACA,MAAA,cAAA,EAAA,CAAA,CAAA,CAAA,CAAA;MACA;MACA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,IAAA,CAAA;IACA;;IAEA,CAAA,EAAA,KAAA,iBAAA,EAAA;UACA,iBAAA,MAAA,eAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;IACA,EAAA,CAAA,CAAA,CAAA,EAAA;UACA,YAAA,CAAA,CAAA,CAAA,CAAA,EAAA,OAAA,eAAA,CAAA;IACA;EACA,CAAA;;EAEA,CAAA,CAAA;GACA,EAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;GACA;GACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA;GACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;GACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA;GACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;GACA,CAAA;SACA,UAAA,cAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,iBAAA,OAAA,MAAA,OAAA,EAAA;;IAEA,CAAA,CAAA,MAAA,UAAA;IACA,CAAA,EAAA,IAAA,YAAA,EAAA;YACA,EAAA,CAAA,CAAA,OAAA,KAAA,CAAA;YACA,cAAA,MAAA,CAAA;IACA,EAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,SAAA,kBAAA,EAAA;YACA,KAAA,kBAAA,CAAA,CAAA;YACA,UAAA,CAAA,CAAA,CAAA,CAAA,EAAA,MAAA,OAAA,CAAA;IACA;IACA,CAAA,EAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,EAAA;KACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;KACA,EAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,EAAA;KACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;KACA,CAAA,CAAA,CAAA,CAAA;EACA,CAAA;;EAEA,CAAA,CAAA;GACA;GACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;GACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;GACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;GACA,CAAA;SACA,UAAA,UAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,eAAA,KAAA,UAAA,CAAA;IACA,CAAA,CAAA,WAAA,EAAA,CAAA,CAAA;;IAEA,CAAA,CAAA,OAAA,iBAAA,CAAA;eACA,kBAAA,KAAA,CAAA,iBAAA,SAAA,CAAA;IACA;IACA,CAAA,CAAA,CAAA;IACA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,KAAA,aAAA,CAAA;MACA,CAAA,CAAA,EAAA;iBACA,MAAA,aAAA,SAAA,CAAA;MACA,EAAA,CAAA,CAAA,CAAA,CAAA,EAAA,EAAA,EAAA,CAAA;IACA;;IAEA,CAAA,CAAA,CAAA,CAAA,CAAA,UAAA;EACA,CAAA;;QAEA,SAAA,EAAA,CAAA,CAAA,SAAA,CAAA,CAAA;;AAEA,CAAA,CAAA,OAAA,CAAA;AC7IA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;;AAEA,CAAA,CAAA;AACA;AACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA;AACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,OAAA,MAAA,QAAA,CAAA;EACA,CAAA,CAAA,CAAA,CAAA,OAAA,OAAA;;EAEA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;EACA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,OAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,EAAA;IACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,QAAA,EAAA;MACA,CAAA,CAAA,CAAA,OAAA,eAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;MACA,CAAA,CAAA,CAAA,CAAA,OAAA,EAAA,EAAA,QAAA,EAAA,CAAA;IACA;EACA;AACA;;AAEA,CAAA,CAAA;AACA;AACA,EAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA;KACA,UAAA,QAAA,EAAA;aACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;aACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;aACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;aACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;gBACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA;;AAEA,CAAA,CAAA;AACA;AACA,EAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA;KACA,UAAA,OAAA,EAAA,CAAA,CAAA,CAAA,CAAA;;AAEA,CAAA,CAAA;CACA;CACA,EAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;CACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;CACA,CAAA;KACA,UAAA,OAAA,EAAA,CAAA,CAAA,CAAA,CAAA;;AAEA,CAAA,CAAA;AACA;AACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA;KACA,UAAA,MAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,QAAA,CAAA;EACA,CAAA,CAAA,CAAA,CAAA,CAAA,UAAA,cAAA,UAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA;;AAEA,CAAA,CAAA;AACA;AACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA;KACA,UAAA,UAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,aAAA,CAAA,CAAA;EACA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,MAAA;AACA,CAAA;;AAEA,CAAA,CAAA;AACA;AACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA;KACA,UAAA,SAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,aAAA,YAAA,CAAA;EACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,EAAA,CAAA,CAAA,CAAA,CAAA,OAAA,EAAA,CAAA,CAAA,CAAA,CAAA,aAAA,CAAA,CAAA;EACA,CAAA,CAAA,YAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,EAAA,EAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,MAAA;EACA,CAAA,CAAA,GAAA,MAAA,KAAA,EAAA,CAAA,CAAA,CAAA,CAAA,MAAA,WAAA;EACA,CAAA,CAAA,CAAA,GAAA,CAAA,IAAA,EAAA;IACA,CAAA,CAAA,CAAA,GAAA,eAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;SACA,IAAA,EAAA,CAAA;IACA,CAAA,CAAA,MAAA,UAAA,QAAA,UAAA,EAAA,CAAA,CAAA,EAAA,EAAA,EAAA;MACA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA;IACA;EACA;EACA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA;;AAEA,CAAA,CAAA;CACA;CACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA;CACA,CAAA;KACA,UAAA,UAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,aAAA,MAAA,CAAA;EACA,CAAA,CAAA,OAAA,EAAA,CAAA,CAAA,CAAA,CAAA,QAAA,CAAA,CAAA,CAAA,CAAA,CAAA,OAAA,SAAA,CAAA;MACA,aAAA,MAAA,WAAA,EAAA,CAAA,CAAA,CAAA,CAAA,OAAA,OAAA;AACA,CAAA;;AAEA,CAAA,CAAA;AACA;AACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA;KACA,UAAA,cAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,YAAA,CAAA,CAAA;EACA,CAAA,CAAA;SACA,EAAA,CAAA,CAAA,CAAA,CAAA,KAAA;WACA,EAAA,CAAA,CAAA,CAAA,CAAA,OAAA;SACA,MAAA,CAAA,CAAA;UACA,MAAA,CAAA,CAAA;UACA,MAAA,CAAA,CAAA;YACA,EAAA,CAAA,CAAA,CAAA,CAAA,qBAAA,CAAA;EACA;;EAEA,CAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;MACA,YAAA,QAAA,OAAA;OACA,WAAA,QAAA,SAAA;OACA,WAAA,QAAA,SAAA;;EAEA,CAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA;OACA,aAAA,OAAA,WAAA,EAAA,CAAA,CAAA,CAAA,CAAA,MAAA;;EAEA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;MACA,YAAA,MAAA,CAAA;MACA,YAAA,MAAA,CAAA;MACA,YAAA,QAAA,CAAA;;MAEA,KAAA,EAAA,CAAA,CAAA,CAAA,CAAA;;EAEA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA;AACA,CAAA;;AAEA,CAAA,CAAA;CACA;CACA,CAAA;KACA,UAAA,OAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA;SACA,SAAA,CAAA,CAAA,CAAA,CAAA,CAAA,QAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA;;AAEA,CAAA,CAAA;CACA;CACA,CAAA;KACA,UAAA,MAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA;SACA,YAAA,CAAA,CAAA,CAAA,CAAA,CAAA,QAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA;;AAEA,CAAA,CAAA;CACA;CACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;CACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;CACA,CAAA;KACA,UAAA,sBAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,eAAA,CAAA,EAAA;EACA,CAAA,CAAA;SACA,EAAA,CAAA,CAAA,CAAA,CAAA,KAAA;WACA,EAAA,CAAA,CAAA,CAAA,CAAA,OAAA;SACA,MAAA,CAAA,CAAA;WACA,MAAA,CAAA;EACA;;MAEA,aAAA,QAAA,WAAA;QACA,WAAA,QAAA,aAAA;;MAEA,YAAA,OAAA,CAAA;;EAEA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA;AACA,CAAA;AC3JA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;;AAEA,CAAA,CAAA;CACA;CACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;CACA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,UAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;;AAEA,CAAA,CAAA;AACA;AACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,EAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA;QACA,WAAA,EAAA;EACA,CAAA,CAAA;GACA;GACA,CAAA;cACA,UAAA;;EAEA,CAAA,CAAA;GACA;GACA,CAAA;iBACA,EAAA;YACA,EAAA,CAAA,CAAA;YACA,EAAA,CAAA,CAAA,CAAA;gBACA,EAAA,EAAA,CAAA;gBACA,EAAA,CAAA,CAAA,CAAA,CAAA;gBACA,EAAA,CAAA,CAAA,CAAA,CAAA;oBACA,EAAA,CAAA,CAAA;oBACA,EAAA,CAAA;qBACA,EAAA,CAAA;uBACA,EAAA,CAAA,CAAA;mBACA,EAAA,CAAA,CAAA,QAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;iaAAA,EAAA,EAAA;iBACA,KAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA;UACA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;UACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;MACA;;MAEA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,QAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,EAAA;kBACA,EAAA,CAAA,CAAA;MACA;;MAEA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,EAAA,EAAA,EAAA;UACA,CAAA,CAAA,CAAA,CAAA,MAAA,EAAA,CAAA,CAAA,CAAA,CAAA,QAAA,QAAA,MAAA,CAAA;MACA;;MAEA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;MACA,CAAA,CAAA,GAAA,UAAA,EAAA,CAAA,CAAA,CAAA,CAAA,eAAA;MACA,CAAA,CAAA,CAAA,GAAA,CAAA,SAAA,EAAA;QACA,CAAA,CAAA,CAAA,QAAA,eAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;QACA,CAAA,CAAA,QAAA,EAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA;mBACA,EAAA,EAAA,SAAA,EAAA,CAAA;QACA;MACA;;MAEA,CAAA,CAAA,CAAA,CAAA,SAAA,SAAA;;MAEA,CAAA,CAAA,CAAA,CAAA,QAAA,IAAA;;MAEA,CAAA,CAAA,CAAA,CAAA,WAAA,EAAA,CAAA,CAAA,CAAA,CAAA,kBAAA,GAAA,CAAA;MACA,CAAA,CAAA,CAAA,CAAA,OAAA,EAAA,CAAA,CAAA,CAAA,CAAA,cAAA,CAAA,CAAA;MACA,CAAA,CAAA,CAAA,CAAA,UAAA,YAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA;;MAEA,CAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA;MACA,CAAA,CAAA,CAAA,CAAA,YAAA,CAAA,CAAA;MACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;;EAEA,CAAA;;aAEA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,cAAA,CAAA,EAAA;;WAEA,SAAA,CAAA,CAAA,CAAA,CAAA,CAAA,UAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,eAAA;SACA,KAAA,CAAA,QAAA,MAAA;MACA,CAAA,CAAA,OAAA,IAAA,OAAA;MACA,CAAA,CAAA,CAAA,KAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;MACA,CAAA,CAAA,OAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,WAAA,EAAA;QACA,CAAA,CAAA,CAAA,CAAA,MAAA,MAAA,CAAA,CAAA;QACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;QACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;MACA;MACA,CAAA,CAAA,WAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;MACA,CAAA,CAAA,QAAA,SAAA,kBAAA,KAAA,UAAA,EAAA,CAAA,CAAA;MACA,CAAA,CAAA,QAAA,EAAA;QACA,CAAA,CAAA,CAAA,CAAA,OAAA,MAAA,IAAA,CAAA;QACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;MACA;IACA,YAAA,CAAA;;EAEA,CAAA;;EAEA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA;EACA,CAAA;EACA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;EACA,CAAA;EACA,CAAA,KAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;EACA,CAAA;EACA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA;EACA,CAAA;EACA,CAAA,CAAA,CAAA;;EAEA,CAAA,CAAA;GACA;GACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA;GACA,CAAA;OACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,cAAA,IAAA,CAAA;;IAEA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;IACA,CAAA,CAAA,eAAA,EAAA,CAAA,CAAA,CAAA,CAAA,QAAA,aAAA;IACA,CAAA,CAAA,eAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,SAAA,EAAA;UACA,EAAA,IAAA,CAAA,CAAA,CAAA,CAAA,QAAA,aAAA,CAAA,CAAA,CAAA,CAAA;IACA;;IAEA,CAAA,EAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA;QACA,EAAA,IAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA;IACA,CAAA,CAAA,CAAA,IAAA,OAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;;IAEA,CAAA,CAAA,IAAA,EAAA,CAAA,OAAA,EAAA,CAAA,CAAA,CAAA,CAAA,QAAA,IAAA,CAAA,KAAA,MAAA,OAAA;IACA,CAAA,CAAA,mBAAA,EAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA;IACA,CAAA,CAAA,CAAA,CAAA,EAAA,GAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA,CAAA,CAAA,OAAA,CAAA,CAAA,CAAA,OAAA,KAAA,EAAA,CAAA,kBAAA,CAAA,CAAA;EACA,CAAA;;EAEA,CAAA,CAAA;GACA;GACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA;GACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;GACA,CAAA;UACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,WAAA,IAAA,EAAA;IACA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,aAAA,CAAA,CAAA,CAAA;EACA,CAAA;;EAEA,CAAA,CAAA;GACA;GACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA;GACA,CAAA;SACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,UAAA,IAAA,EAAA;IACA,CAAA,CAAA,EAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,OAAA,EAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;IACA,CAAA,CAAA,CAAA,CAAA,UAAA,YAAA,IAAA,QAAA,CAAA,CAAA,CAAA;IACA,CAAA,CAAA,CAAA,CAAA,UAAA,YAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;IACA,CAAA,CAAA,CAAA,CAAA,KAAA,KAAA,IAAA,CAAA;IACA,CAAA,CAAA,CAAA,CAAA,YAAA,CAAA,CAAA;EACA,CAAA;;EAEA,CAAA,CAAA;GACA;GACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;GACA,CAAA;UACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,WAAA,CAAA,EAAA;IACA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,KAAA;EACA,CAAA;;EAEA,CAAA,CAAA;GACA;GACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;GACA,CAAA;WACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,YAAA,CAAA,EAAA;IACA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,CAAA,CAAA,CAAA,aAAA,CAAA,CAAA,CAAA;EACA,CAAA;;EAEA,CAAA,CAAA;GACA;GACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;GACA,CAAA;eACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,UAAA,CAAA,CAAA;IACA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,QAAA,UAAA;EACA,CAAA;;EAEA,CAAA,CAAA;GACA;GACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA;GACA,CAAA;eACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,UAAA,IAAA,EAAA;IACA,CAAA,CAAA,CAAA,CAAA,QAAA,WAAA,MAAA,EAAA,CAAA,CAAA;EACA,CAAA;;EAEA,CAAA,CAAA;GACA;GACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA;GACA,CAAA;SACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,UAAA,IAAA,EAAA;IACA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,OAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;IACA,CAAA,CAAA,CAAA,CAAA,SAAA,CAAA,CAAA;IACA,CAAA,CAAA,CAAA,CAAA,KAAA,KAAA;OACA,MAAA,CAAA,CAAA;EACA,CAAA;;EAEA,CAAA,CAAA;GACA;GACA,CAAA;WACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,YAAA,CAAA,EAAA;IACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,EAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA;EACA,CAAA;;EAEA,CAAA,CAAA;EACA;EACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;EACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;EACA,CAAA;oBACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,SAAA,EAAA;;MAEA,CAAA,CAAA,UAAA,SAAA,YAAA,CAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,EAAA;;UAEA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,OAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,EAAA,EAAA;cACA,CAAA,CAAA,CAAA,CAAA,OAAA,UAAA,agBACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,YAAA,CAAA,EAAA;IACA,CAAA,CAAA,MAAA,EAAA,CAAA,CAAA,CAAA,CAAA,QAAA;IACA,CAAA,CAAA,QAAA,UAAA,cAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;SACA,WAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;;IAEA,CAAA,CAAA,YAAA,KAAA,eAAA;IACA,CAAA,CAAA,YAAA,EAAA,EAAA,EAAA;WACA,WAAA,WAAA;IACA;;IAEA,CAAA,CAAA,cAAA,KAAA,iBAAA;IACA,CAAA,CAAA,cAAA,EAAA;WACA,aAAA,aAAA;IACA;;WAEA,SAAA,MAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,aAAA;MACA,CAAA,CAAA,CAAA,CAAA,SAAA,CAAA,CAAA;aACA,SAAA,CAAA,CAAA,CAAA,CAAA,CAAA,UAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;IACA,YAAA,CAAA;WACA,SAAA,MAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,aAAA;aACA,YAAA,CAAA,CAAA,CAAA,CAAA,CAAA,UAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;IACA,YAAA,CAAA;WACA,SAAA,MAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,aAAA;MACA,CAAA,CAAA,MAAA,OAAA,MAAA;MACA,CAAA,CAAA,KAAA,QAAA,CAAA,CAAA,CAAA,CAAA,CAAA,aAAA,CAAA,CAAA,EAAA,CAAA,CAAA,EAAA,CAAA,EAAA,EAAA;QACA,CAAA,CAAA,IAAA,EAAA,CAAA,SAAA,EAAA,CAAA,CAAA,CAAA,CAAA,QAAA,IAAA,CAAA,KAAA,QAAA,OAAA;QACA,CAAA,CAAA,CAAA,CAAA,EAAA,GAAA,CAAA,CAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA,CAAA,CAAA,KAAA,OAAA,EAAA,CAAA,CAAA;aACA,OAAA,QAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA;aACA,MAAA,CAAA,CAAA;MACA;IACA,YAAA,CAAA;;IAEA,CAAA,CAAA,CAAA,CAAA,CAAA,OAAA;EACA,CAAA;;EAEA,CAAA,CAAA;GACA;GACA,CAAA;cACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,eAAA,CAAA,EAAA;;IAEA,CAAA,CAAA,OAAA,cAAA,EAAA,CAAA,MAAA,EAAA,CAAA,CAAA,CAAA,CAAA,MAAA;WACA,EAAA,CAAA,CAAA,CAAA,CAAA,UAAA,MAAA,EAAA,CAAA,CAAA,CAAA,CAAA,QAAA;eACA;;IAEA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;gBACA,CAAA,EAAA,CAAA,QAAA,SAAA,KAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,CAAA;gBACA,CAAA,EAAA,CAAA,QAAA,SAAA,KAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,CAAA;cACA,MAAA,aAAA,aAAA;;IAEA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA;OACA,MAAA,OAAA,EAAA,CAAA;;IAEA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA;UACA,YAAA,KAAA,WAAA;;IAEA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA;IACA,CAAA,CAAA,KAAA,eAAA,QAAA,EAAA;MACA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA;MACA,CAAA,EAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;MACA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;YACA,WAAA;IACA;IACA,CAAA,CAAA,KAAA,eAAA,EAAA;MACA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA;YACA,MAAA,IAAA,MAAA,KAAA,cAAA,CAAA;MACA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA;MACA,CAAA,EAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA;YACA,MAAA,IAAA,MAAA,WAAA,CAAA;IACA;;IAEA,CAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA;OACA,MAAA,OAAA,QAAA,EAAA,CAAA,CAAA,CAAA,CAAA;EACA,CAAA;;EAEA,CAAA,CAAA,CAAA,CAAA;EACA,CAAA,EAAA;EACA,CAAA,EAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;EACA,CAAA,EAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;EACA,CAAA,EAAA,CAAA;EACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,EAAA;EACA,CAAA;EACA,CAAA,KAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;EACA,CAAA,SAAA,CAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;EACA,CAAA;EACA,CAAA,KAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;EACA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;EACA,CAAA;EACA,CAAA,KAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,EAAA;EACA,CAAA,SAAA,CAAA,EAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA;EACA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA;EACA,CAAA,aAAA,CAAA,EAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA;EACA,CAAA,aaAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;EACA,CAAA,aAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA;EACA,CAAA,iBAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,EAAA,CAAA;EACA,CAAA,aAAA;EACA,CAAA,SAAA;EACA,CAAA,KAAA;EACA,CAAA;EACA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,EAAA;EACA,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;EACA,CAAA,KAAA;EACA,CAAA;EACA,CAAA,KAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;EACA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;EACA,CAAA;EACA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;EACA,CAAA,CAAA,CAAA;;EAEA,CAAA,CAAA;GACA;GACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA;GACA,CAAA;MACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,EAAA;MACA,CAAA,CAAA,CAAA,OAAA,QAAA,OAAA,IAAA,CAAA;MACA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,QAAA,MAAA,SAAA,IAAA,IAAA,CAAA;MACA,CAAA,CAAA,CAAA,SAAA,MAAA,IAAA,CAAA;EACA;AACA,CAAA;;AAEA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA;;AAEA,CAAA,CAAA,OAAA,OAAA,EAAA;IACA,CAAA,CAAA;KACA;KACA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;KACA,CAAA;UACA,OAAA,GAAA,UAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA;QACA,CAAA,CAAA,MAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;QACA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,EAAA;eACA,KAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,UAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;QACA;QACA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA;IACA,CAAA;AACA;;MAEA,QAAA,QAAA,QAAA,CAAA,EAAA,CAAA,CAAA;MACA,SAAA,UAAA","file":"hashtags.min.js","sourcesContent":["(function(window){\r\n  \"use strict\";\r\n\r\n  function HtUtils() {\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {HTMLElement} el\r\n   * @param {string} clName\r\n   * @param {number} [limit]\r\n   * @returns {HTMLElement}\r\n   */\r\n  HtUtils.prototype.getClosestByClass = function htuGetClosest(el, clName, limit) {\r\n    limit = limit || parseInt(limit) || -1;\r\n    while (limit !== 0) {\r\n      if (this.hasClass(el, clName)) return el;\r\n      if (--limit === 0) return null;\r\n      el = el.parentNode;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @param el\r\n   * @param clName\r\n   * @returns {boolean}\r\n   */\r\n  HtUtils.prototype.hasClass = function htuHasCls(el, clName) {\r\n    if (!el || !el.className) return false;\r\n    return (' ' + el.className + ' ').indexOf(' ' + clName + ' ') >= 0;\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @param el\r\n   * @param clName\r\n   * @private\r\n   */\r\n  HtUtils.prototype.addClass = function htuAddCls(el, clName) {\r\n    el.className += ' ' + clName;\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @param el\r\n   * @param clName\r\n   * @private\r\n   */\r\n  HtUtils.prototype.removeClass = function htuRemCls(el, clName) {\r\n    el.className = el.className.replace(new RegExp('[\\\\s]*' + clName + '[\\\\s]*', 'g'), '');\r\n  };\r\n\r\n  /**\r\n   * @see http://stackoverflow.com/questions/10149963/adding-event-listener-cross-browser\r\n   * add event cross browser\r\n   *\r\n   * @param elem\r\n   * @param event\r\n   * @param fn\r\n   */\r\n  HtUtils.prototype.addEvent = function htuAddEvent(elem, event, fn) {\r\n    // avoid memory overhead of new anonymous functions for every event handler that's installed\r\n    // by using local functions\r\n    function listenHandler(e) {\r\n      var ret = fn.apply(this, arguments);\r\n      if (ret === false) {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n      }\r\n      return (ret);\r\n    }\r\n\r\n    function attachHandler() {\r\n      // set the this pointer same as addEventListener when fn is called\r\n      // and make sure the event is passed to the fn also so that works the same too\r\n      var ret = fn.call(elem, window.event);\r\n      if (ret === false) {\r\n        window.event.returnValue = false;\r\n        window.event.cancelBubble = true;\r\n      }\r\n      return (ret);\r\n    }\r\n\r\n    if (elem.addEventListener) {\r\n      elem.addEventListener(event, listenHandler, false);\r\n    } else {\r\n      elem.attachEvent(\"on\" + event, attachHandler);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @see https://gist.github.com/dciccale/6226151\r\n   *\r\n   * @param target\r\n   * @param type\r\n   * @param event\r\n   * @private\r\n   */\r\n  HtUtils.prototype.triggerEvent = function htuTriggerEvent(target, type, event) {\r\n\r\n    var doc = document;\r\n    if (doc.createEvent) {\r\n      event = new Event(type);\r\n      target.dispatchEvent(event);\r\n    } else if (document.createEventObject) {\r\n      event = doc.createEventObject();\r\n      target.fireEvent('on' + type, event);\r\n    }\r\n    /* else if (typeof target['on' + type] == 'function' ) {\r\n     target['on' + type]();\r\n     } else if (typeof target[type] == 'function' ) {\r\n     target[type]();\r\n     }/**/\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @param oElm\r\n   * @param css3Prop\r\n   * @returns {string}\r\n   */\r\n  HtUtils.prototype.getStyle = function htuGetElStyle(oElm, css3Prop){\r\n    var strValue = \"\";\r\n\r\n    if(window.getComputedStyle){\r\n      strValue = getComputedStyle(oElm).getPropertyValue(css3Prop);\r\n    }\r\n    //IE\r\n    else if (oElm.currentStyle){\r\n      try {\r\n        strValue = oElm.currentStyle[css3Prop];\r\n      } catch (e) {}\r\n    }\r\n\r\n    return strValue;\r\n  };\r\n\r\n  window.htUtils = new HtUtils();\r\n\r\n})(window);","\"use strict\";\r\n\r\n/**\r\n*\r\n* @param {string} value\r\n* @param {Object} [params]\r\n* @constructor\r\n*/\r\nfunction HtTag(value, params){\r\n  this.value = value;\r\n\r\n  // extend params if specified\r\n  if( typeof(params) === 'object' ) {\r\n    for(var k in params) {\r\n      if(!params.hasOwnProperty(k)) continue;\r\n      this.params[k] = params[k];\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n*\r\n* @type {Object}\r\n*/\r\nHtTag.prototype.params = {\r\n  cssTag     : 'ht-hashtag',\r\n  cssLabel   : 'ht-hashtag-label',\r\n  cssValue   : 'ht-hashtag-value',\r\n  cssActions : 'ht-hashtag-actions',\r\n  cssActRemove  : 'ht-hashtag-remove'\r\n};\r\n\r\n/**\r\n*\r\n* @type {string}\r\n*/\r\nHtTag.prototype.value = null;\r\n\r\n/**\r\n *\r\n * @type {HTMLElement}\r\n * @private\r\n */\r\nHtTag.prototype._node = null;\r\n\r\n/**\r\n*\r\n* @param {string} tagName\r\n* @returns {HTMLElement}\r\n* @private\r\n*/\r\nHtTag.prototype._ces = function(tagName){\r\n  return document.createElement( tagName || 'span');\r\n};\r\n\r\n/**\r\n*\r\n* @returns {string}\r\n*/\r\nHtTag.prototype.toString = function tagToString(){\r\n  return this.value;\r\n};\r\n\r\n/**\r\n*\r\n* @returns {HTMLElement}\r\n*/\r\nHtTag.prototype.getNode = function tagToString( nodeClass ){\r\n  if(!this._node) this._node = this.generateNode();\r\n  if( nodeClass === void 0 ) return this._node;\r\n  var k, node, cn = this._node.childNodes;\r\n  for(k in cn) {\r\n    if(!cn.hasOwnProperty(k)) continue;\r\n    node = cn[k];\r\n    if( node.className.indexOf(nodeClass) === 0 ) {\r\n      return node;\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\n/**\r\n *\r\n * @param {string} value\r\n */\r\nHtTag.prototype.setValue = function tagSetValue(value){\r\n  var node = this.getNode(this.params.cssValue);\r\n  node.textContent = node.innerText = this.value = value;\r\n};\r\n\r\n/**\r\n*\r\n* @returns {HTMLElement}\r\n*/\r\nHtTag.prototype.generateNode = function tagGenNode(){\r\n  var\r\n    _ces = this._ces,\r\n    params = this.params,\r\n    node = _ces(),\r\n    label = _ces(),\r\n    value = _ces(),\r\n    actions = this._generateActionsNode()\r\n  ;\r\n\r\n  // set classes\r\n  node.className  = params.cssTag;\r\n  label.className = params.cssLabel;\r\n  value.className = params.cssValue;\r\n\r\n  // set value\r\n  value.textContent = value.innerText = this.value;\r\n\r\n  // append sub-nodes to main node\r\n  node.appendChild(label);\r\n  node.appendChild(value);\r\n  node.appendChild(actions);\r\n\r\n  node.tag = this;\r\n\r\n  return node;\r\n};\r\n\r\n/**\r\n *\r\n */\r\nHtTag.prototype.focus = function() {\r\n  htUtils.addClass(this.getNode(), 'ht-hashtag--focused');\r\n};\r\n\r\n/**\r\n *\r\n */\r\nHtTag.prototype.blur = function() {\r\n  htUtils.removeClass(this.getNode(), 'ht-hashtag--focused');\r\n};\r\n\r\n/**\r\n *\r\n * @private\r\n * @returns {HTMLElement}\r\n */\r\nHtTag.prototype._generateActionsNode = function tagActionNode() {\r\n  var\r\n    _ces = this._ces,\r\n    params = this.params,\r\n    node = _ces(),\r\n    remove = _ces()\r\n  ;\r\n\r\n  node.className   = params.cssActions;\r\n  remove.className = params.cssActRemove;\r\n\r\n  node.appendChild(remove);\r\n\r\n  return node;\r\n};","\"use strict\";\r\n\r\n/**\r\n *\r\n * @constructor\r\n */\r\nfunction HashTags(){this.init.apply(this, arguments);/**/}\r\n\r\n/**\r\n*\r\n* @public\r\n* @type {Object}\r\n*/\r\nHashTags.prototype = {\r\n  /**\r\n   *\r\n   */\r\n  constructor : HashTags,\r\n\r\n  /**\r\n   *\r\n   */\r\n  defaultOptions : {\r\n      value : '',\r\n      label : '#',\r\n      separator : ' ',\r\n      removeBtn : true,\r\n      copyStyle : true,\r\n      inputMinWidth : 50,\r\n      inputMaxWidth : 0,\r\n      inputMaxLength : 0,\r\n      inputPlaceholder : '',\r\n      invalidChars : new RegExp('[^\\\\s\\\\w-]+','gi'),\r\n      styleAttrs : [\r\n          'background',\r\n          'color',\r\n          'border',\r\n          'padding',\r\n          'margin'\r\n      ]\r\n  },\r\n\r\n  /**\r\n   * @type {HtTag}\r\n   */\r\n  tag : null,\r\n\r\n  /**\r\n   * @type {Array<HtTag>}\r\n   */\r\n  tags : [],\r\n\r\n  /**\r\n   * @type {HTMLElement}\r\n   */\r\n  target : null,\r\n\r\n  /**\r\n   * @type {HTMLElement}\r\n   */\r\n  container : null,\r\n\r\n  /**\r\n   * @type {HTMLElement}\r\n   */\r\n  input : null,\r\n\r\n  /**\r\n   * @type {Object}\r\n   */\r\n  options : {},\r\n\r\n  /**\r\n   *\r\n   * @param {HTMLElement} el\r\n   * @param {Object} [options]\r\n   */\r\n  init : function( el, options ) {\r\n\r\n      if( !(el instanceof HTMLElement) ) {\r\n          console.warn('wrong element', el);\r\n          this.log('HashTags element not instance of the HTMLElement');\r\n          return;\r\n      }\r\n\r\n      if( typeof(options) !== 'object' ) {\r\n          options = {};\r\n      }\r\n\r\n      if( options.value !== void 0 ) {\r\n          this.tags = this.extract(options.value);\r\n      }\r\n\r\n      // extend options\r\n      var k, defOpts = this.defaultOptions;\r\n      for(k in defOpts) {\r\n        if(!defOpts.hasOwnProperty(k)) continue;\r\n        if(options[k] === void 0) {\r\n            options[k] = defOpts[k];\r\n        }\r\n      }\r\n\r\n      this.options = options;\r\n\r\n      this.target = el;\r\n\r\n      this.container = this.generateContainer(el);\r\n      this.input = this.generateInput();\r\n      this.container.appendChild(this.input);\r\n\r\n      this.bindEvents();\r\n      this.resizeInput();\r\n      //this.setUp();\r\n\r\n  },\r\n\r\n  bindEvents : function htBindEvents() {\r\n\r\n    htUtils.addEvent(this.container, 'click', (ev) => {\r\n      ev = ev || window.event;\r\n      var targ = ev.target;\r\n      if(!targ) return;\r\n      if( targ == this.container ) {\r\n        this.input.focus();\r\n        //this._triggerEvent(this.input, 'focus');\r\n        return;\r\n      }\r\n      var htClName = 'ht-hashtag';\r\n      var htTag = htUtils.getClosestByClass(targ, htClName, 3);\r\n      if( htTag ) {\r\n        this.setTag(htTag.tag);\r\n        return;\r\n      }\r\n    });\r\n\r\n  },\r\n\r\n  //setUp : function hashtagsSetup() {\r\n  //\r\n  //    this.container.classList.add('ht-hashtags-container');\r\n  //\r\n  //    var tags = this.value.split(this.options.separator);\r\n  //\r\n  //    console.warn('tags', tags);\r\n  //\r\n  //},\r\n\r\n  /**\r\n   *\r\n   * @param {string} str\r\n   */\r\n  push : function htPushString(str){\r\n\r\n    // replace not valid characters\r\n    var invalidChars = this.options.invalidChars;\r\n    if( invalidChars instanceof RegExp ) {\r\n      str = (str+'').replace(invalidChars,'');\r\n    }\r\n\r\n    // trim spaces\r\n    str = (str+'').trim();\r\n    if(!str.length) return;\r\n\r\n    var i = 0, tags = this.extract(str), ii = tags.length;\r\n    var defaultTagParams = {}; // TODO\r\n    for(;i<ii;++i) this.addTag(new HtTag(tags[i], defaultTagParams));\r\n  },\r\n\r\n  /**\r\n   *\r\n   * @param {string} str\r\n   * @returns {Array}\r\n   */\r\n  extract : function htExtract(str) {\r\n    return ((str||'')+'').split(this.getSeparator());\r\n  },\r\n\r\n  /**\r\n   *\r\n   * @param {HtTag} tag\r\n   */\r\n  addTag : function htAddTag(tag) {\r\n    if( !(tag instanceof HtTag) ) return;\r\n    this.container.appendChild(tag.getNode());\r\n    this.container.appendChild(this.input); // append input to end\r\n    this.tags.push(tag);\r\n    this.resizeInput();\r\n  },\r\n\r\n  /**\r\n   *\r\n   * @returns {Array.<HtTag>}\r\n   */\r\n  getTags : function htGetTags() {\r\n    return this.tags;\r\n  },\r\n\r\n  /**\r\n   *\r\n   * @returns {string}\r\n   */\r\n  getValue : function htGetValue() {\r\n    return this.tags.join(this.getSeparator());\r\n  },\r\n\r\n  /**\r\n   *\r\n   * @returns {string}\r\n   */\r\n  getSeparator : function htGetSep(){\r\n    return this.options.separator;\r\n  },\r\n\r\n  /**\r\n   *\r\n   * @param {string} sep\r\n   */\r\n  setSeparator : function htSetSep(sep) {\r\n    this.options.separator = sep + '';\r\n  },\r\n\r\n  /**\r\n   *\r\n   * @param {HtTag} tag\r\n   */\r\n  setTag : function htSetTag(tag) {\r\n    if(!(tag instanceof HtTag)) return;\r\n    this.unsetTag();\r\n    this.tag = tag;\r\n    tag.focus();\r\n  },\r\n\r\n  /**\r\n   *\r\n   */\r\n  unsetTag : function htUnsetTag() {\r\n    if(this.tag) this.tag.blur();\r\n  },\r\n\r\n  /**\r\n  *\r\n  * @param {HTMLElement} sourceEl\r\n  * @returns {HTMLElement}\r\n  */\r\n  generateContainer : function(sourceEl) {\r\n\r\n      if( sourceEl.nodeName.toLowerCase() !== 'input' ) {\r\n\r\n          if( this.value === null ) {\r\n              this.value = sourceEl.textContent || sourceEl.innerText;\r\n          }\r\n\r\n          return sourceEl;\r\n      }\r\n\r\n    throw new Error('clone input not implemented yet');\r\n      //return this.cloneInput(sourceEl);\r\n  },\r\n\r\n  /**\r\n   *\r\n   * @returns {HTMLElement}\r\n   */\r\n  generateInput : function htGenInput() {\r\n    var opt = this.options;\r\n    var input = document.createElement('input');\r\n    input.className = 'ht-hashtag-input';\r\n\r\n    var maxLength = opt.inputMaxLength;\r\n    if( maxLength > 1 ) {\r\n      input.maxLength = maxLength;\r\n    }\r\n\r\n    var placeholder = opt.inputPlaceholder;\r\n    if( placeholder ) {\r\n      input.placeholder = placeholder;\r\n    }\r\n\r\n    htUtils.addEvent(input, 'focus', () => {\r\n      this.unsetTag();\r\n      htUtils.addClass(this.container, 'ht-hashtag-container--focused');\r\n    });\r\n    htUtils.addEvent(input, 'blur', () => {\r\n      htUtils.removeClass(this.container, 'ht-hashtag-container--focused');\r\n    });\r\n    htUtils.addEvent(input, 'keyup', () => {\r\n      var val = input.value;\r\n      if( val.indexOf(this.getSeparator()) !== -1 ) {\r\n        var i = 0, values = this.extract(val), ii = values.length;\r\n        for(;i<ii-1;++i) this.push(values[i]);\r\n        input.value = values[ii]||'';\r\n        input.focus();\r\n      }\r\n    });\r\n\r\n    return input;\r\n  },\r\n\r\n  /**\r\n   *\r\n   */\r\n  resizeInput : function htResizeInput() {\r\n\r\n    var width, contPadding = 0, inp = this.input,\r\n      cont = this.container, opt = this.options,\r\n      contWidth;\r\n\r\n    // container padding\r\n    contPadding += +(htUtils.getStyle(cont, 'padding-left')||'').split('px').shift();\r\n    contPadding += +(htUtils.getStyle(cont, 'padding-right')||'').split('px').shift();\r\n    contWidth = cont.offsetWidth - contPadding;\r\n\r\n    // reset width\r\n    inp.style.width = 0;\r\n\r\n    // calculate new width\r\n    width = contWidth - inp.offsetLeft;\r\n\r\n    // correct width\r\n    if( opt.inputMinWidth > width ) {\r\n      // if width is smaller, that min width,\r\n      // than input will be on new row,\r\n      // so set it the whole width of container\r\n      width = contWidth;\r\n    }\r\n    if( opt.inputMaxWidth ) {\r\n      // limit max width\r\n      width = Math.min(width, opt.inputMaxWidth);\r\n      // because cont can have smaller width,\r\n      // than max width option\r\n      width = Math.min(width, contWidth);\r\n    }\r\n\r\n    // set new width\r\n    inp.style.width = width + 'px';\r\n  },\r\n\r\n  ///**\r\n  // *\r\n  // * @param {HTMLElement} inputEl\r\n  // * @returns {HTMLElement}\r\n  // */\r\n  //cloneInput : function( inputEl ) {\r\n  //\r\n  //    var container,\r\n  //        opts = this.options;\r\n  //\r\n  //    // generate container\r\n  //    container = document.createElement('div');\r\n  //\r\n  //    if( opts.copyStyle ) {\r\n  //        // copy input style\r\n  //        if( inputEl.getAttribute('type') == 'text') {\r\n  //            // copy width\r\n  //            container.style.width = inputEl.offsetWidth;\r\n  //        }\r\n  //\r\n  //        // copy style attrs\r\n  //        var computedStyle = window.getComputedStyle(inputEl, null);\r\n  //        var i = 0, k, s, attrs = opts.styleAttrs, ii = attrs.length;\r\n  //        for(;i<ii;++i) {\r\n  //            k=attrs[i];\r\n  //            if(s=computedStyle[k]) {\r\n  //                container.style[k] = s;\r\n  //            }\r\n  //        }\r\n  //    }\r\n  //\r\n  //    if(this.value === null) {\r\n  //        this.value = inputEl.value;\r\n  //    }\r\n  //\r\n  //    // append container to DOM\r\n  //    inputEl.parentNode.insertBefore(container, inputEl);\r\n  //\r\n  //    return container;\r\n  //},\r\n\r\n  /**\r\n   *\r\n   * @param {String} msg\r\n   */\r\n  log : function( msg ) {\r\n      if(!window.console) alert(msg);\r\n      else if(!console.error) console.log(msg);\r\n      else console.error(msg);\r\n  }\r\n};\r\n\r\n////////////////////\r\n// export\r\n\r\nif(window.jQuery) {\r\n    /**\r\n     *\r\n     * @returns {jQuery}\r\n     */\r\n    window.jQuery.fn.hashtags = function() {\r\n        var $el = $(this);\r\n        if(!$el.data('hashtags') ) {\r\n            $el.data('hashtags', new HashTags(this));\r\n        }\r\n        return $el;\r\n    };\r\n}\r\n\r\nwindow.module = window.module || {};\r\nmodule.exports = HashTags;"],"sourceRoot":"/source/"}